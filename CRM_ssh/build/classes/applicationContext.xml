<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns="http://www.springframework.org/schema/beans" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop" 
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 
							http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">

<!--
jdbc.jdbcUrl=jdbc:mysql://129.204.66.126:3306/crm_20170713
jdbc.driverClass=com.mysql.jdbc.Driver
jdbc.user=crm_20170713
jdbc.password=6dKbE4CSEde7WhrT 
-->

	<!-- 读取db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置c3p0连接池 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" ></property>
		<property name="driverClass" value="${jdbc.driverClass}" ></property>
		<property name="user" value="${jdbc.user}" ></property>
		<property name="password" value="${jdbc.password}" ></property>
	</bean>
	
	<!-- 核心事务管理器 -->
	<bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	
	
	 <tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 加载配置方案2:在spring配置中放置hibernate配置信息 -->
	<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" >
		<!-- 将连接池注入到sessionFactory, hibernate会通过连接池获得连接 -->
		<property name="dataSource" ref="dataSource" ></property>
		<!-- 配置hibernate基本信息 -->
		<property name="hibernateProperties">
			<props>
				<!--  必选配置 -->
			<prop key="hibernate.connection.driver_class" >com.mysql.jdbc.Driver</prop>
				<prop key="hibernate.connection.url" >jdbc:mysql:///crm</prop>
				<prop key="hibernate.connection.username" >root</prop>
				<prop key="hibernate.connection.password" >root</prop> 
				<prop key="hibernate.dialect" >org.hibernate.dialect.MySQLDialect</prop>
				
				<!--  可选配置 -->
				<prop key="hibernate.show_sql" >true</prop>
				<prop key="hibernate.format_sql" >true</prop>
				<prop key="hibernate.hbm2ddl.auto" >update</prop>
			</props>
		</property>
		<!-- 引入orm元数据,指定orm元数据所在的包路径,spring会自动读取包中的所有配置 -->
		<property name="mappingDirectoryLocations" value="classpath:com/gzucm/domain" ></property>
	
	</bean>
	
	<!-- action -->
	<!-- 注意:Action对象作用范围一定是多例的.这样才符合struts2架构 -->
	<bean name="customerAction" class="com.gzucm.web.action.CustomerAction" scope="prototype" >
		<property name="customerService" ref="customerService" ></property>
	</bean>
	<!-- service -->
	<bean name="customerService" class="com.gzucm.service.impl.CustomerServiceImpl" >
		<property name="customerDao" ref="customerDao" ></property>
	</bean>
	<!-- dao -->
	<bean name="customerDao" class="com.gzucm.dao.impl.CustomerDaoImpl" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	
	
	<!-- action -->
	<!-- 注意:Action对象作用范围一定是多例的.这样才符合struts2架构 -->
	<bean name="userAction" class="com.gzucm.web.action.UserAction" scope="prototype" >
		<property name="userService" ref="userService" ></property>
	</bean>
	<!-- service -->
	<bean name="userService" class="com.gzucm.service.impl.UserServiceImpl" >
		<property name="userDao" ref="userDao" ></property>
	</bean>
	<!-- dao -->
	<bean name="userDao" class="com.gzucm.dao.impl.UserDaoImpl" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	
	<!-- action -->
	<!-- 注意:Action对象作用范围一定是多例的.这样才符合struts2架构 -->
	<bean name="baseDictAction" class="com.gzucm.web.action.BaseDictAction" scope="prototype" >
		<property name="baseDictService" ref="baseDictService" ></property>
	</bean>
	<!-- service -->
	<bean name="baseDictService" class="com.gzucm.service.impl.BaseDictServiceImpl" >
		<property name="baseDictDao" ref="baseDictDao" ></property>
	</bean>
	<!-- dao -->
	<bean name="baseDictDao" class="com.gzucm.dao.impl.BaseDictDaoImpl" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	
	<!-- action -->
	<bean name="linkManAction" class="com.gzucm.web.action.LinkManAction" scope="prototype" >
		<property name="linkManService" ref="linkManService" ></property>
	</bean>
	<!-- service -->
	<bean name="linkManService" class="com.gzucm.service.impl.LinkManServiceImpl" >
		<property name="linkManDao" ref="linkManDao" ></property>
	</bean>
	<!-- dao -->
	<bean name="linkManDao" class="com.gzucm.dao.impl.LinkManDaoImpl" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	
	<!-- action -->
	<bean name="saleVisitAction" class="com.gzucm.web.action.SaleVisitAction" scope="prototype" >
		<property name="saleVisitService" ref="saleVisitService" ></property>
	</bean>
	<!-- service -->
	<bean name="saleVisitService" class="com.gzucm.service.impl.SaleVisitServiceImpl" >
		<property name="saleVisitDao" ref="saleVisitDao" ></property>
	</bean>
	<!-- dao -->
	<bean name="saleVisitDao" class="com.gzucm.dao.impl.SaleVisitDaoImpl" >
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	
	
</beans>